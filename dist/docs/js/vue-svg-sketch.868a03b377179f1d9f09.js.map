{"version":3,"sources":["webpack:///docs/js/vue-svg-sketch.868a03b377179f1d9f09.js","webpack:///./src/default.js","webpack:///./src/lib.js","webpack:///./src/utils/sketch.js","webpack:///./src/utils/utils.js","webpack:///svg-sketch.vue","webpack:///./src/components/svg-sketch.vue","webpack:///./src/components/svg-sketch.vue?eece"],"names":["webpackJsonp","11","module","exports","14","__webpack_exports__","__webpack_require__","width","height","minDistance","strokeWidth","stroke","disabled","16","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__components_svg_sketch__","__WEBPACK_IMPORTED_MODULE_0__components_svg_sketch___default","n","__WEBPACK_IMPORTED_MODULE_1__styles_lib_styl__","17","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default","__WEBPACK_IMPORTED_MODULE_2_es6_object_assign__","__WEBPACK_IMPORTED_MODULE_3__utils_js__","__WEBPACK_IMPORTED_MODULE_4__default_js__","Sketch","element","options","this","i","_temp","$parent","document","createElement","$svg","createSvg","is_touch","documentElement","appendChild","classList","add","style","display","listen","key","addEventListener","beginDraw","bind","drawMove","endDraw","_ref","_ref$version","version","undefined","svg","createElementNS","setAttribute","_ref2","d","path","offsetLeft","offsetTop","coords","holdKey","line","lineStartCoords","lineDirection","dist","y","prevCoords","x","event","targetTouches","length","preventDefault","setOffset","drawing","getCoords","getCoordsByShiftKey","shiftKey","$path","createPath","children","remove","innerHTML","set","json","sketchVersion","sketchJsonV3","sketchJsonV1","get","_this","paths","pathsHTML","forEach","pathElement","sw","s","outerHTML","_this2","18","getSketchJson","svgElement","res","type","getAttribute","toString","push","getCoordsByEvent","changedTouches","pageX","pageY","layerX","layerY","getDistance","coords1","coords2","Math","sqrt","getDirectionMove","abs","20","__WEBPACK_IMPORTED_MODULE_0__utils_sketch_js__","name","props","Boolean","size","String","Number","default","color","data","sketch","mounted","$el","methods","revert","back","clean","getJSON","sketchJson","watch","3","Component","40","render","_vm","_h","$createElement","_self","_c","staticClass","staticRenderFns"],"mappings":"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","file":"docs/js/vue-svg-sketch.868a03b377179f1d9f09.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 11:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 14:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  /**\n   *\n   */\n  width: 300,\n\n  /**\n   *\n   */\n  height: 300,\n\n  /**\n   *\n   */\n  minDistance: 3,\n\n  /**\n   *\n   */\n  strokeWidth: 3,\n\n  /**\n   *\n   */\n  stroke: '#ff0028',\n\n  /**\n   *\n   */\n  disabled: false\n});\n\n/***/ }),\n\n/***/ 16:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_svg_sketch__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_svg_sketch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_svg_sketch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__styles_lib_styl__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__styles_lib_styl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__styles_lib_styl__);\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__components_svg_sketch___default.a);\n\n/***/ }),\n\n/***/ 17:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_es6_object_assign__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_es6_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_es6_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_js__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__default_js__ = __webpack_require__(14);\n\n\n\n\n\n\n/**\n *\n */\n\nvar Sketch = function () {\n    function Sketch(element, options) {\n        __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, Sketch);\n\n        this.element = element;\n        this.options = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_es6_object_assign__[\"assign\"])({}, __WEBPACK_IMPORTED_MODULE_4__default_js__[\"a\" /* default */], options);\n\n        this._temp = {};\n\n        this.$parent = document.createElement('div');\n        this.$svg = this.createSvg(this.options);\n        this.is_touch = 'ontouchstart' in document.documentElement;\n\n        this.$parent.appendChild(this.$svg);\n        element.appendChild(this.$parent);\n\n        this.$parent.classList.add('svg-sketch-wrap');\n        this.$parent.style.display = 'inline-block';\n\n        this.listen();\n\n        return this;\n    }\n\n    /**\n     *\n     * @returns {Sketch}\n     */\n\n\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(Sketch, [{\n        key: 'listen',\n        value: function listen() {\n            if (this.is_touch) {\n                this.element.addEventListener('touchstart', this.beginDraw.bind(this));\n                this.element.addEventListener('touchmove', this.drawMove.bind(this));\n                document.addEventListener('touchend', this.endDraw.bind(this));\n            } else {\n                this.element.addEventListener('mousedown', this.beginDraw.bind(this));\n                this.element.addEventListener('mousemove', this.drawMove.bind(this));\n                document.addEventListener('mouseup', this.endDraw.bind(this));\n            }\n\n            return this;\n        }\n\n        /**\n         *\n         * @param value\n         */\n\n    }, {\n        key: 'createSvg',\n\n\n        /**\n         *\n         * @param width\n         * @param height\n         * @param version\n         * @returns {HTMLElement | SVGAElement | SVGCircleElement | SVGClipPathElement | SVGComponentTransferFunctionElement | SVGDefsElement | *}\n         */\n        value: function createSvg(_ref) {\n            var width = _ref.width,\n                height = _ref.height,\n                _ref$version = _ref.version,\n                version = _ref$version === undefined ? 1.1 : _ref$version;\n\n            var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n            svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n            svg.setAttribute('version', version);\n            svg.setAttribute('width', width);\n            svg.setAttribute('height', height);\n\n            return svg;\n        }\n\n        /**\n         *\n         * @param strokeWidth\n         * @param stroke\n         * @param d\n         * @returns {HTMLElement | SVGAElement | SVGCircleElement | SVGClipPathElement | SVGComponentTransferFunctionElement | SVGDefsElement | *}\n         */\n\n    }, {\n        key: 'createPath',\n        value: function createPath(_ref2) {\n            var strokeWidth = _ref2.strokeWidth,\n                stroke = _ref2.stroke,\n                d = _ref2.d;\n\n            var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n            path.setAttribute('stroke-width', strokeWidth);\n            path.setAttribute('stroke-linecap', 'round');\n            path.setAttribute('stroke-linejoin', 'round');\n            path.setAttribute('stroke', stroke);\n            path.setAttribute('fill', 'none');\n\n            if (d) {\n                path.setAttribute('d', d);\n            }\n\n            return path;\n        }\n\n        /**\n         *\n         */\n\n    }, {\n        key: 'setOffset',\n        value: function setOffset() {\n            this._temp.offsetLeft = this.$parent.offsetLeft || 0;\n            this._temp.offsetTop = this.$parent.offsetTop || 0;\n        }\n\n        /**\n         *\n         * @param coords\n         * @param holdKey\n         * @returns {*}\n         */\n\n    }, {\n        key: 'getCoordsByShiftKey',\n        value: function getCoordsByShiftKey(coords, holdKey) {\n            if (holdKey) {\n                this._temp.line = true;\n\n                // если начальные координаты лини не заданы\n                if (!this._temp.lineStartCoords) {\n                    this._temp.lineStartCoords = coords;\n                    // если направление линии не определено\n                } else if (!this._temp.lineDirection) {\n                    var dist = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_js__[\"a\" /* getDistance */])(this._temp.lineStartCoords, coords);\n                    // если дистанция от начальной точки превышает порог,\n                    // то получаем направление движения\n                    if (dist > 10) {\n                        this._temp.lineDirection = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_js__[\"b\" /* getDirectionMove */])(this._temp.lineStartCoords, coords);\n                    }\n                }\n\n                if (this._temp.lineDirection === 'x') {\n                    coords.y = this._temp.prevCoords.y;\n                } else if (this._temp.lineDirection === 'y') {\n                    coords.x = this._temp.prevCoords.x;\n                }\n            } else {\n                this._temp.line = false;\n                this._temp.lineDirection = null;\n                this._temp.lineStartCoords = null;\n            }\n\n            return coords;\n        }\n\n        /**\n         *\n         * @param event\n         */\n\n    }, {\n        key: 'beginDraw',\n        value: function beginDraw(event) {\n            if (this.options.disabled) {\n                return;\n            }\n\n            if (event.targetTouches) {\n                if (event.targetTouches.length > 1) return;\n                // Блокируем скролл на тач устройствах\n                event.preventDefault();\n            }\n\n            // Обновляем фосет до получение координат\n            this.setOffset();\n\n            this._temp.drawing = true;\n\n            var coords = this.getCoords(event);\n            coords = this.getCoordsByShiftKey(coords, event.shiftKey);\n\n            this.$path = this.createPath(this.options);\n            this.$svg.appendChild(this.$path);\n\n            this._temp.path = 'M' + coords.x + ',' + coords.y + 'l0,0';\n            this.$path.setAttribute('d', this._temp.path);\n\n            // Сохраняем координаты\n            this._temp.prevCoords = coords;\n        }\n\n        /**\n         *\n         * @param event\n         */\n\n    }, {\n        key: 'drawMove',\n        value: function drawMove(event) {\n            if (this.options.disabled || !this._temp.drawing) {\n                return;\n            }\n\n            if (event.targetTouches) {\n                if (event.targetTouches.length > 1) return;\n                // Блокируем скролл на тач устройствах\n                event.preventDefault();\n            }\n\n            var coords = this.getCoords(event);\n            var distance = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_js__[\"a\" /* getDistance */])(this._temp.prevCoords, coords);\n\n            if (distance > this.options.minDistance) {\n                coords = this.getCoordsByShiftKey(coords, event.shiftKey);\n\n                this._temp.path += 'l' + (coords.x - this._temp.prevCoords.x) + ',' + (coords.y - this._temp.prevCoords.y);\n                this._temp.prevCoords = coords;\n                this.$path.setAttribute('d', this._temp.path);\n            }\n        }\n\n        /**\n         *\n         */\n\n    }, {\n        key: 'endDraw',\n        value: function endDraw() {\n            if (this.options.disabled) {\n                return;\n            }\n            // Обнуляем временные значения\n            this._temp.drawing = false;\n            this._temp.path = '';\n            this._temp.offsetLeft = 0;\n            this._temp.offsetTop = 0;\n            this._temp.lineDirection = null;\n            this._temp.line = false;\n            this._temp.lineStartCoords = null;\n        }\n\n        /**\n         *\n         */\n\n    }, {\n        key: 'back',\n        value: function back() {\n            if (this.$svg.children && this.$svg.children.length) {\n                this.$svg.children[this.$svg.children.length - 1].remove();\n            }\n        }\n\n        /**\n         *\n         */\n\n    }, {\n        key: 'clean',\n        value: function clean() {\n            if (this.$svg) {\n                this.$svg.innerHTML = '';\n            }\n        }\n\n        /**\n         *\n         * @param event\n         */\n\n    }, {\n        key: 'getCoords',\n        value: function getCoords(event) {\n            var coords = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_js__[\"c\" /* getCoordsByEvent */])(event);\n            coords.x -= this._temp.offsetLeft;\n            coords.y -= this._temp.offsetTop;\n\n            return coords;\n        }\n    }, {\n        key: 'strokeWidth',\n        set: function set(value) {\n            this.options.strokeWidth = value;\n        }\n\n        /**\n         *\n         * @param value\n         */\n\n    }, {\n        key: 'stroke',\n        set: function set(value) {\n            this.options.stroke = value;\n        }\n\n        /**\n         *\n         * @param value\n         */\n\n    }, {\n        key: 'disabled',\n        set: function set(value) {\n            this.options.disabled = value;\n        }\n\n        /**\n         *\n         * @param json\n         */\n\n    }, {\n        key: 'sketchJson',\n        set: function set(json) {\n            /* eslint-disable eqeqeq */\n            if (json.sketchVersion == 2) {\n                this.sketchJsonV3 = json;\n            } else {\n                this.sketchJsonV1 = json;\n            }\n        }\n\n        /**\n         *\n         * @param json\n         */\n        ,\n\n\n        /**\n         *\n         */\n        get: function get() {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_js__[\"d\" /* getSketchJson */])(this.$svg);\n        }\n    }, {\n        key: 'sketchJsonV3',\n        set: function set(json) {\n            var _this = this;\n\n            var svg = this.createSvg({ width: json.width, height: json.height, version: json.version });\n            var paths = json.paths || [];\n            var pathsHTML = '';\n\n            paths.forEach(function (path) {\n                var pathElement = _this.createPath({ strokeWidth: path.sw, stroke: path.s, d: path.d });\n                pathsHTML += pathElement.outerHTML;\n            });\n\n            svg.innerHTML = pathsHTML;\n        }\n\n        /**\n         *\n         * @param json\n         */\n\n    }, {\n        key: 'sketchJsonV1',\n        set: function set(json) {\n            var _this2 = this;\n\n            var svg = this.createSvg({ width: json.width, height: json.height });\n            var paths = json.paths || [];\n            var pathsHTML = '';\n\n            paths.forEach(function (d) {\n                var pathElement = _this2.createPath({ d: d, strokeWidth: __WEBPACK_IMPORTED_MODULE_4__default_js__[\"a\" /* default */].strokeWidth, stroke: __WEBPACK_IMPORTED_MODULE_4__default_js__[\"a\" /* default */].stroke });\n                pathsHTML += pathElement.outerHTML;\n            });\n\n            svg.innerHTML = pathsHTML;\n        }\n\n        /**\n         *\n         * @returns {string}\n         */\n\n    }, {\n        key: 'sketchSvg',\n        get: function get() {\n            return this.$svg.outerHTML;\n        }\n    }]);\n\n    return Sketch;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Sketch);\n\n/***/ }),\n\n/***/ 18:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = getSketchJson;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getCoordsByEvent;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getDistance;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getDirectionMove;\n/**\n *\n * @param svgElement\n * @returns {{type: string, version: number, sketchVersion: number, width: *|string, height: *|string, paths: Array}}\n */\nfunction getSketchJson(svgElement) {\n    var res = {\n        type: 'svg',\n        version: 1.1,\n        sketchVersion: 2,\n        width: svgElement.getAttribute('width'),\n        height: svgElement.getAttribute('height'),\n        paths: []\n    };\n    if (!svgElement || svgElement.toString() !== '[object SVGSVGElement]') {\n        return res;\n    }\n\n    var length = svgElement.children.length;\n\n    if (length) {\n        for (var i = 0; length > i; i++) {\n            var path = svgElement.children[i];\n            res.paths.push({\n                d: path.getAttribute('d'),\n                s: path.getAttribute('stroke'),\n                sw: path.getAttribute('stroke-width')\n            });\n        }\n    }\n\n    return res;\n}\n\n/**\n *\n * @param event\n * @returns {{x: number, y: number}}\n */\nfunction getCoordsByEvent(event) {\n    var coords = { x: 0, y: 0 };\n\n    if (event.changedTouches) {\n        coords.x = event.changedTouches[0].pageX;\n        coords.y = event.changedTouches[0].pageY;\n    } else {\n        coords.x = event.layerX;\n        coords.y = event.layerY;\n    }\n\n    return coords;\n}\n\n/**\n *\n * @param coords1\n * @param coords2\n * @returns {number}\n */\nfunction getDistance(coords1, coords2) {\n    return Math.sqrt((coords2.x - coords1.x) * (coords2.x - coords1.x) + (coords2.y - coords1.y) * (coords2.y - coords1.y));\n}\n\n/**\n *\n * @param coords1\n * @param coords2\n * @returns {string}\n */\nfunction getDirectionMove(coords1, coords2) {\n    var offsetX = Math.abs(coords1.x - coords2.x);\n    var offsetY = Math.abs(coords1.y - coords2.y);\n\n    return offsetX < offsetY ? 'y' : 'x';\n}\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_sketch_js__ = __webpack_require__(17);\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    name: 'svg-sketch',\n    props: {\n        /**\n         *\n         */\n        disabled: Boolean,\n        /**\n         *\n         */\n\n        size: {\n            type: [String, Number],\n            default: 3\n        },\n\n        /**\n         *\n         */\n        color: {\n            type: String,\n            default: 'red'\n        },\n\n        /**\n         *\n         */\n        width: {\n            type: [String, Number],\n            default: 300\n        },\n\n        /**\n         *\n         */\n        height: {\n            type: [String, Number],\n            default: 300\n        }\n    },\n    data: function data() {\n        return {\n            /**\n             *\n             */\n            sketch: null\n        };\n    },\n    mounted: function mounted() {\n        this.sketch = new __WEBPACK_IMPORTED_MODULE_0__utils_sketch_js__[\"a\" /* default */](this.$el, {\n            width: this.width,\n            height: this.height,\n            stroke: this.color,\n            strokeWidth: this.size\n        });\n    },\n\n    methods: {\n        /**\n         *\n         */\n        revert: function revert() {\n            this.sketch.back();\n        },\n\n\n        /**\n         *\n         */\n        clean: function clean() {\n            this.sketch.clean();\n        },\n\n\n        /**\n         *\n         * @returns {*}\n         */\n        getJSON: function getJSON() {\n            return this.sketch.sketchJson;\n        }\n    },\n    watch: {\n        /**\n         *\n         * @param value\n         */\n        disabled: function disabled(value) {\n            this.sketch.disabled = value;\n        },\n\n\n        /**\n         *\n         * @param value\n         */\n        size: function size(value) {\n            this.sketch.strokeWidth = value;\n        },\n\n\n        /**\n         *\n         * @param value\n         */\n        color: function color(value) {\n            this.sketch.stroke = value;\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(8)(\n  /* script */\n  __webpack_require__(20),\n  /* template */\n  __webpack_require__(40),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 40:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"svg-sketch\"\n  })\n},staticRenderFns: []}\n\n/***/ })\n\n},[16]);\n\n\n// WEBPACK FOOTER //\n// docs/js/vue-svg-sketch.868a03b377179f1d9f09.js","export default {\n    /**\n     *\n     */\n    width: 300,\n\n    /**\n     *\n     */\n    height: 300,\n\n    /**\n     *\n     */\n    minDistance: 3,\n\n    /**\n     *\n     */\n    strokeWidth: 3,\n\n    /**\n     *\n     */\n    stroke: '#ff0028',\n\n    /**\n     *\n     */\n    disabled: false\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/default.js","import vueSvgSketch from './components/svg-sketch'\nimport './styles/lib.styl'\n\nexport default vueSvgSketch\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib.js","import {assign} from 'es6-object-assign'\nimport {getSketchJson, getCoordsByEvent, getDistance, getDirectionMove} from './utils.js'\nimport defaultOptions from '../default.js'\n\n\n/**\n *\n */\nexport default class Sketch {\n\n    constructor (element, options) {\n        this.element = element\n        this.options = assign({}, defaultOptions, options)\n\n        this._temp = {}\n\n        this.$parent = document.createElement('div')\n        this.$svg = this.createSvg(this.options)\n        this.is_touch = 'ontouchstart' in document.documentElement\n\n        this.$parent.appendChild(this.$svg)\n        element.appendChild(this.$parent)\n\n        this.$parent.classList.add('svg-sketch-wrap')\n        this.$parent.style.display = 'inline-block'\n\n        this.listen()\n\n        return this\n    }\n\n    /**\n     *\n     * @returns {Sketch}\n     */\n    listen () {\n        if (this.is_touch) {\n            this.element.addEventListener('touchstart', this.beginDraw.bind(this))\n            this.element.addEventListener('touchmove', this.drawMove.bind(this))\n            document.addEventListener('touchend', this.endDraw.bind(this))\n        } else {\n            this.element.addEventListener('mousedown', this.beginDraw.bind(this))\n            this.element.addEventListener('mousemove', this.drawMove.bind(this))\n            document.addEventListener('mouseup', this.endDraw.bind(this))\n        }\n\n        return this\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set strokeWidth (value) {\n        this.options.strokeWidth = value\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set stroke (value) {\n        this.options.stroke = value\n    }\n\n    /**\n     *\n     * @param value\n     */\n    set disabled (value) {\n        this.options.disabled = value\n    }\n\n    /**\n     *\n     * @param json\n     */\n    set sketchJson (json) {\n        /* eslint-disable eqeqeq */\n        if (json.sketchVersion == 2) {\n            this.sketchJsonV3 = json\n        } else {\n            this.sketchJsonV1 = json\n        }\n    }\n\n    /**\n     *\n     * @param json\n     */\n    set sketchJsonV3 (json) {\n        let svg = this.createSvg({width: json.width, height: json.height, version: json.version})\n        let paths = json.paths || []\n        let pathsHTML = ''\n\n        paths.forEach(path => {\n            let pathElement = this.createPath({strokeWidth: path.sw, stroke: path.s, d: path.d})\n            pathsHTML += pathElement.outerHTML\n        })\n\n        svg.innerHTML = pathsHTML\n    }\n\n    /**\n     *\n     * @param json\n     */\n    set sketchJsonV1 (json) {\n        let svg = this.createSvg({width: json.width, height: json.height})\n        let paths = json.paths || []\n        let pathsHTML = ''\n\n        paths.forEach(d => {\n            let pathElement = this.createPath({d, strokeWidth: defaultOptions.strokeWidth, stroke: defaultOptions.stroke})\n            pathsHTML += pathElement.outerHTML\n        })\n\n        svg.innerHTML = pathsHTML\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    get sketchSvg () {\n        return this.$svg.outerHTML\n    }\n\n    /**\n     *\n     */\n    get sketchJson () {\n        return getSketchJson(this.$svg)\n    }\n\n    /**\n     *\n     * @param width\n     * @param height\n     * @param version\n     * @returns {HTMLElement | SVGAElement | SVGCircleElement | SVGClipPathElement | SVGComponentTransferFunctionElement | SVGDefsElement | *}\n     */\n    createSvg ({width, height, version = 1.1}) {\n        let svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n\n        svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink')\n        svg.setAttribute('version', version)\n        svg.setAttribute('width', width)\n        svg.setAttribute('height', height)\n\n        return svg\n    }\n\n    /**\n     *\n     * @param strokeWidth\n     * @param stroke\n     * @param d\n     * @returns {HTMLElement | SVGAElement | SVGCircleElement | SVGClipPathElement | SVGComponentTransferFunctionElement | SVGDefsElement | *}\n     */\n    createPath ({strokeWidth, stroke, d}) {\n        let path = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\n        path.setAttribute('stroke-width', strokeWidth)\n        path.setAttribute('stroke-linecap', 'round')\n        path.setAttribute('stroke-linejoin', 'round')\n        path.setAttribute('stroke', stroke)\n        path.setAttribute('fill', 'none')\n\n        if (d) {\n            path.setAttribute('d', d)\n        }\n\n        return path\n    }\n\n    /**\n     *\n     */\n    setOffset () {\n        this._temp.offsetLeft = this.$parent.offsetLeft || 0\n        this._temp.offsetTop = this.$parent.offsetTop || 0\n    }\n\n    /**\n     *\n     * @param coords\n     * @param holdKey\n     * @returns {*}\n     */\n    getCoordsByShiftKey (coords, holdKey) {\n        if (holdKey) {\n            this._temp.line = true\n\n            // если начальные координаты лини не заданы\n            if (!this._temp.lineStartCoords) {\n                this._temp.lineStartCoords = coords\n            // если направление линии не определено\n            } else if (!this._temp.lineDirection) {\n                let dist = getDistance(this._temp.lineStartCoords, coords)\n                // если дистанция от начальной точки превышает порог,\n                // то получаем направление движения\n                if (dist > 10) {\n                    this._temp.lineDirection = getDirectionMove(this._temp.lineStartCoords, coords)\n                }\n            }\n\n            if (this._temp.lineDirection === 'x') {\n                coords.y = this._temp.prevCoords.y\n            } else if (this._temp.lineDirection === 'y') {\n                coords.x = this._temp.prevCoords.x\n            }\n        } else {\n            this._temp.line = false\n            this._temp.lineDirection = null\n            this._temp.lineStartCoords = null\n        }\n\n        return coords\n    }\n\n    /**\n     *\n     * @param event\n     */\n    beginDraw (event) {\n        if (this.options.disabled) {\n            return\n        }\n\n        if (event.targetTouches) {\n            if (event.targetTouches.length > 1) return\n            // Блокируем скролл на тач устройствах\n            event.preventDefault()\n        }\n\n        // Обновляем фосет до получение координат\n        this.setOffset()\n\n        this._temp.drawing = true\n\n        let coords = this.getCoords(event)\n        coords = this.getCoordsByShiftKey(coords, event.shiftKey)\n\n        this.$path = this.createPath(this.options)\n        this.$svg.appendChild(this.$path)\n\n        this._temp.path = `M${coords.x},${coords.y}l0,0`\n        this.$path.setAttribute('d', this._temp.path)\n\n        // Сохраняем координаты\n        this._temp.prevCoords = coords\n    }\n\n    /**\n     *\n     * @param event\n     */\n    drawMove (event) {\n        if (this.options.disabled || !this._temp.drawing) {\n            return\n        }\n\n        if (event.targetTouches) {\n            if (event.targetTouches.length > 1) return\n            // Блокируем скролл на тач устройствах\n            event.preventDefault()\n        }\n\n        let coords = this.getCoords(event)\n        let distance = getDistance(this._temp.prevCoords, coords)\n\n        if (distance > this.options.minDistance) {\n            coords = this.getCoordsByShiftKey(coords, event.shiftKey)\n\n            this._temp.path += `l${coords.x - this._temp.prevCoords.x},${coords.y - this._temp.prevCoords.y}`\n            this._temp.prevCoords = coords\n            this.$path.setAttribute('d', this._temp.path)\n        }\n    }\n\n    /**\n     *\n     */\n    endDraw () {\n        if (this.options.disabled) {\n            return\n        }\n        // Обнуляем временные значения\n        this._temp.drawing = false\n        this._temp.path = ''\n        this._temp.offsetLeft = 0\n        this._temp.offsetTop = 0\n        this._temp.lineDirection = null\n        this._temp.line = false\n        this._temp.lineStartCoords = null\n    }\n\n    /**\n     *\n     */\n    back () {\n        if (this.$svg.children && this.$svg.children.length) {\n            this.$svg.children[this.$svg.children.length - 1].remove()\n        }\n    }\n\n    /**\n     *\n     */\n    clean () {\n        if (this.$svg) {\n            this.$svg.innerHTML = ''\n        }\n    }\n\n    /**\n     *\n     * @param event\n     */\n    getCoords (event) {\n        let coords = getCoordsByEvent(event)\n        coords.x -= this._temp.offsetLeft\n        coords.y -= this._temp.offsetTop\n\n        return coords\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/sketch.js","/**\n *\n * @param svgElement\n * @returns {{type: string, version: number, sketchVersion: number, width: *|string, height: *|string, paths: Array}}\n */\nexport function getSketchJson (svgElement) {\n    let res = {\n        type: 'svg',\n        version: 1.1,\n        sketchVersion: 2,\n        width: svgElement.getAttribute('width'),\n        height: svgElement.getAttribute('height'),\n        paths: []\n    }\n    if (!svgElement || svgElement.toString() !== '[object SVGSVGElement]') {\n        return res\n    }\n\n    let length = svgElement.children.length\n\n    if (length) {\n        for (let i = 0; length > i; i++) {\n            let path = svgElement.children[i]\n            res.paths.push({\n                d: path.getAttribute('d'),\n                s: path.getAttribute('stroke'),\n                sw: path.getAttribute('stroke-width')\n            })\n        }\n    }\n\n    return res\n}\n\n/**\n *\n * @param event\n * @returns {{x: number, y: number}}\n */\nexport function getCoordsByEvent (event) {\n    let coords = {x: 0, y: 0}\n\n    if (event.changedTouches) {\n        coords.x = event.changedTouches[0].pageX\n        coords.y = event.changedTouches[0].pageY\n    } else {\n        coords.x = event.layerX\n        coords.y = event.layerY\n    }\n\n    return coords\n}\n\n/**\n *\n * @param coords1\n * @param coords2\n * @returns {number}\n */\nexport function getDistance (coords1, coords2) {\n    return Math.sqrt((coords2.x - coords1.x) * (coords2.x - coords1.x) + (coords2.y - coords1.y) * (coords2.y - coords1.y))\n}\n\n/**\n *\n * @param coords1\n * @param coords2\n * @returns {string}\n */\nexport function getDirectionMove (coords1, coords2) {\n    let offsetX = Math.abs(coords1.x - coords2.x)\n    let offsetY = Math.abs(coords1.y - coords2.y)\n\n    return (offsetX < offsetY) ? 'y' : 'x'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","<template>\n    <div class=\"svg-sketch\"></div>\n</template>\n\n<script>\n    import Sketch from '@/utils/sketch.js'\n\n    export default {\n        name: 'svg-sketch',\n        props: {\n            /**\n             *\n             */\n            disabled: Boolean,\n            /**\n             *\n             */\n\n            size: {\n                type: [String, Number],\n                default: 3\n            },\n\n            /**\n             *\n             */\n            color: {\n                type: String,\n                default: 'red'\n            },\n\n            /**\n             *\n             */\n            width: {\n                type: [String, Number],\n                default: 300\n            },\n\n            /**\n             *\n             */\n            height: {\n                type: [String, Number],\n                default: 300\n            }\n        },\n        data () {\n            return {\n                /**\n                 *\n                 */\n                sketch: null\n            }\n        },\n        mounted () {\n            this.sketch = new Sketch(this.$el, {\n                width: this.width,\n                height: this.height,\n                stroke: this.color,\n                strokeWidth: this.size\n            })\n        },\n        methods: {\n            /**\n             *\n             */\n            revert () {\n                this.sketch.back()\n            },\n\n            /**\n             *\n             */\n            clean () {\n                this.sketch.clean()\n            },\n\n            /**\n             *\n             * @returns {*}\n             */\n            getJSON () {\n                return this.sketch.sketchJson\n            }\n        },\n        watch: {\n            /**\n             *\n             * @param value\n             */\n            disabled (value) {\n                this.sketch.disabled = value\n            },\n\n            /**\n             *\n             * @param value\n             */\n            size (value) {\n                this.sketch.strokeWidth = value\n            },\n\n            /**\n             *\n             * @param value\n             */\n            color (value) {\n                this.sketch.stroke = value\n            }\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// svg-sketch.vue?eb2f2c88","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./svg-sketch.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b7016e04\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./svg-sketch.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/svg-sketch.vue\n// module id = 3\n// module chunks = 2","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"svg-sketch\"\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-b7016e04\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/svg-sketch.vue\n// module id = 40\n// module chunks = 2"],"sourceRoot":""}